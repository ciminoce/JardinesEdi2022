@model JardinesEdti2022.Web.Models.ViewModels.Cliente.ClienteEditVm

@{
    ViewBag.Title = "Edit";
}

<h2>Editar Cliente</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model=>model.ClienteId)
        @Html.HiddenFor(model=>model.Email)
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Nombres, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nombres, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombres, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CodigoPostal, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CodigoPostal, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CodigoPostal, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.PaisId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.PaisId, Model.Paises, "Seleccione País", new { @class = "form-select" })
                        @Html.ValidationMessageFor(model => model.PaisId, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CiudadId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.CiudadId, Model.Ciudades, "Seleccione Ciudad", new { @class = "form-select" })
                        @Html.ValidationMessageFor(model => model.CiudadId, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", disabled="disabled" } )
               
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 mt-3">
                <input type="submit" value="Editar" class="btn btn-warning" />
                @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-success" })
            </div>
        </div>
    </div>
}
@section scripts
{
    <script>
        var cboPaises = document.getElementById("PaisId");
        cboPaises.addEventListener("change", LlenarComboCiudades);

        function LlenarComboCiudades() {
            fetch("@Url.Content("~/Cliente/GetCiudades")" + "?paisId=" + cboPaises.value)
                .then(function(result) {
                    if (result.ok) {
                        return result.json();
                    }
                })
                .then(function(data) {
                    var cboCiudades = document.getElementById("CiudadId");
                    cboCiudades.innerHTML = "";
                    data.forEach(function(elemento) {
                        let opt = document.createElement("option");
                        opt.appendChild(document.createTextNode(elemento.Text));
                        opt.value = elemento.Value;
                        cboCiudades.appendChild(opt);
                    });
                });
        }
    </script>
}
